ファイル構成

rating_site/
    public/
        index.html
        item.html
        login.html
        mypage.html
        css/
            style.css
        js/
            main.js
                各ページに共通する処理をまとめる
            api.js
                サーバーと通信する処理をまとめる
                通信にはfetch()を使用する。その処理をまとめる
            auth.js
                ログイン・ログアウト・ユーザー認証まわりの処理をまとめる
            item.js
                item.html専用
    
    server/
        server.js
            サーバー関連の処理(上司)
        routes/
            auth.js
                認証関連の処理(部下)
            items.js
                アイテム関連の処理(部下)
        db.js
            db関連の処理

    .env
        環境変数を保存する。
        パスワード・db接続情報・apiキー・ポート番号
    .gitignore
        gitで管理したくないファイルを指定するリスト
    package.json
        node.jsの設定・管理
        node.jsはファイル名じゃなくてjs実行環境
    leader.txt


    ratingサイト



DB

•users

-user_id(PK)

-mail(U)

-password

-created_at



•items

-item_id(PK)

-item_name

-criterion_type_id(FK)

-property1

-property2

-created_at



•criteria_types 共通評価はid=0

-criterion_type_id(PK)

-criterion_type_name(U)



•criteria

-criterion_id(PK)

-criterion_name(U)

-criterion_type_id(FK)



•personal_score(ON DELETE CASCADE)

-user_id(PK,FK)

-item_id(PK,FK)

-criterion_id(PK,FK)

-per_score

-created_at



•avg_score(ON DELETE CASCADE)

-item_id(PK,FK)

-criterion_id(PK,FK)

-avg_score

-votes



•tags

-tag_id(PK)

-criterion_type_id(FK)

-tag_name(U)



•item_tags(ON DELETE CASCADE)

-item_id(PK,FK)

-tag_id(PK,FK)



•comments(ON DELETE CASCADE)

-comment_id(PK)

-user_id(FK)

-item_id(FK)

-comment

-created_at



•bookmarks(ON DELETE CASCADE)

-user_id(PK,FK)

-item_id(PK,FK)

-created_at



HTML

•index

おすすめ動画,絞り込み機能,並び替え機能

booking.comを参考に



•item

アイテム詳細,タグ機能,アイテム評価,多角形表示,コメント機能,



•post_item

•login

•register 

•mypage

•tags



手順

DB
post_item.html
item.html